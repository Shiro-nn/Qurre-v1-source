using Qurre.API.Events;
using Qurre.Events.modules;
using static Qurre.Events.modules.Main;
namespace Qurre.Events
{
    public static class Player
    {
        public static event AllEvents<BannedEvent> Banned;
        public static event AllEvents<BanEvent> Ban;
        public static event AllEvents<KickEvent> Kick;
        public static event AllEvents<KickedEvent> Kicked;
        public static event AllEvents<GroupChangeEvent> GroupChange;
        public static event AllEvents<ItemChangeEvent> ItemChange;
        public static event AllEvents<RoleChangeEvent> RoleChange;
        public static event AllEvents<DeadEvent> Dead;
        public static event AllEvents<EscapeEvent> Escape;
        public static event AllEvents<CuffEvent> Cuff;
        public static event AllEvents<UnCuffEvent> UnCuff;
        public static event AllEvents<DamageEvent> Damage;
        public static event AllEvents<DiesEvent> Dies;
        public static event AllEvents<InteractEvent> Interact;
        public static event AllEvents<InteractDoorEvent> InteractDoor;
        public static event AllEvents<InteractLiftEvent> InteractLift;
        public static event AllEvents<InteractLockerEvent> InteractLocker;
        public static event AllEvents<IcomSpeakEvent> IcomSpeak;
        public static event AllEvents<DroppingItemEvent> DroppingItem;
        public static event AllEvents<DropItemEvent> DropItem;
        public static event AllEvents<JoinEvent> Join;
        public static event AllEvents<LeaveEvent> Leave;
        public static event AllEvents<PickupItemEvent> PickupItem;
        public static event AllEvents<RechargeWeaponEvent> RechargeWeapon;
        public static event AllEvents<ShootingEvent> Shooting;
        public static event AllEvents<RagdollSpawnEvent> RagdollSpawn;
        public static event AllEvents<HealEvent> Heal;
        public static event AllEvents<ItemStoppingEvent> ItemStopping;
        public static event AllEvents<ItemUsingEvent> ItemUsing;
        public static event AllEvents<ItemUsedEvent> ItemUsed;
        public static event AllEvents<SyncDataEvent> SyncData;
        public static event AllEvents<ThrowItemEvent> ThrowItem;
        public static event AllEvents<TeslaTriggerEvent> TeslaTrigger;
        public static event AllEvents<InteractGeneratorEvent> InteractGenerator;
        public static event AllEvents<SpeakEvent> Speak;
        public static event AllEvents<SpawnEvent> Spawn;
        public static event AllEvents<RadioUpdateEvent> RadioUpdate;
        public static event AllEvents<TransmitPlayerDataEvent> TransmitPlayerData;
        public static event AllEvents<MicroHidUsingEvent> MicroHidUsing;
        public static event AllEvents<RadioUsingEvent> RadioUsing;
        public static event AllEvents<FlashExplosionEvent> FlashExplosion;
        public static event AllEvents<FragExplosionEvent> FragExplosion;
        public static event AllEvents<FlashedEvent> Flashed;
        public static event AllEvents<DropAmmoEvent> DropAmmo;
        public static event AllEvents<ScpAttackEvent> ScpAttack;
        internal static void Invokes(BannedEvent ev) => Banned.invoke(ev);
        internal static void Invokes(BanEvent ev) => Ban.invoke(ev);
        internal static void Invokes(KickEvent ev) => Kick.invoke(ev);
        internal static void Invokes(KickedEvent ev) => Kicked.invoke(ev);
        internal static void Invokes(GroupChangeEvent ev) => GroupChange.invoke(ev);
        internal static void Invokes(ItemChangeEvent ev) => ItemChange.invoke(ev);
        internal static void Invokes(RoleChangeEvent ev) => RoleChange.invoke(ev);
        internal static void Invokes(DeadEvent ev) => Dead.invoke(ev);
        internal static void Invokes(EscapeEvent ev) => Escape.invoke(ev);
        internal static void Invokes(CuffEvent ev) => Cuff.invoke(ev);
        internal static void Invokes(UnCuffEvent ev) => UnCuff.invoke(ev);
        internal static void Invokes(DamageEvent ev) => Damage.invoke(ev);
        internal static void Invokes(DiesEvent ev) => Dies.invoke(ev);
        internal static void Invokes(InteractEvent ev) => Interact.invoke(ev);
        internal static void Invokes(InteractDoorEvent ev) => InteractDoor.invoke(ev);
        internal static void Invokes(InteractLiftEvent ev) => InteractLift.invoke(ev);
        internal static void Invokes(InteractLockerEvent ev) => InteractLocker?.invoke(ev);
        internal static void Invokes(IcomSpeakEvent ev) => IcomSpeak.invoke(ev);
        internal static void Invokes(DroppingItemEvent ev) => DroppingItem.invoke(ev);
        internal static void Invokes(DropItemEvent ev) => DropItem.invoke(ev);
        internal static void Invokes(JoinEvent ev) => Join.invoke(ev);
        internal static void Invokes(LeaveEvent ev) => Leave.invoke(ev);
        internal static void Invokes(PickupItemEvent ev) => PickupItem.invoke(ev);
        internal static void Invokes(RechargeWeaponEvent ev) => RechargeWeapon.invoke(ev);
        internal static void Invokes(ShootingEvent ev) => Shooting.invoke(ev);
        internal static void Invokes(RagdollSpawnEvent ev) => RagdollSpawn.invoke(ev);
        internal static void Invokes(HealEvent ev) => Heal.invoke(ev);
        internal static void Invokes(ItemStoppingEvent ev) => ItemStopping.invoke(ev);
        internal static void Invokes(ItemUsingEvent ev) => ItemUsing.invoke(ev);
        internal static void Invokes(ItemUsedEvent ev) => ItemUsed.invoke(ev);
        internal static void Invokes(SyncDataEvent ev) => SyncData.invoke(ev);
        internal static void Invokes(ThrowItemEvent ev) => ThrowItem.invoke(ev);
        internal static void Invokes(TeslaTriggerEvent ev) => TeslaTrigger.invoke(ev);
        internal static void Invokes(InteractGeneratorEvent ev) => InteractGenerator.invoke(ev);
        internal static void Invokes(SpeakEvent ev) => Speak.invoke(ev);
        internal static void Invokes(SpawnEvent ev) => Spawn.invoke(ev);
        internal static void Invokes(RadioUpdateEvent ev) => RadioUpdate.invoke(ev);
        internal static void Invokes(TransmitPlayerDataEvent ev) => TransmitPlayerData.invoke(ev);
        internal static void Invokes(MicroHidUsingEvent ev) => MicroHidUsing.invoke(ev);
        internal static void Invokes(RadioUsingEvent ev) => RadioUsing.invoke(ev);
        internal static void Invokes(FlashExplosionEvent ev) => FlashExplosion.invoke(ev);
        internal static void Invokes(FragExplosionEvent ev) => FragExplosion.invoke(ev);
        internal static void Invokes(FlashedEvent ev) => Flashed.invoke(ev);
        internal static void Invokes(DropAmmoEvent ev) => DropAmmo.invoke(ev);
        internal static void Invokes(ScpAttackEvent ev) => ScpAttack.invoke(ev);
    }
}